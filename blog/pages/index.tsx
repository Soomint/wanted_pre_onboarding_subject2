import type { GetStaticProps, InferGetStaticPropsType, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useRouter } from 'next/router'
import { BLOG } from './[id]'

const fs = require('fs');
const fm = require('front-matter');

const Home: NextPage = ({ blogList }: InferGetStaticPropsType<typeof getStaticProps>) => {
  const router = useRouter();

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/" />
      </Head>

      <main className={styles.main}>
        <table>
          <tr>
            <td>카테고리</td>
            <td>제목</td>
            <td>작성일자</td>
            <td>설명</td>
            <td>태그</td>
          </tr>
          {
            blogList.map((blog: BLOG) => (
              <tr key={blog.id} onClick={() => router.push(`/${blog.id}`)}>
                <td>`${blog.categories}`</td>
                <td>`${blog.title}`</td>
                <td>`${blog.date}`</td>
                <td>`${blog.description}`</td>
                <td>`${blog.tags}`</td>
              </tr>
            ))
          }
        </table>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const dir = process.cwd().concat('/__posts');

  const files: string[] = await fs.readdirSync(dir);

  const blogList = files.map(async (fileName: string) => {
    const id = fileName.replace(/\.md$/, '');

    const file = await fs.readFileSync(process.cwd().concat(`/__posts/${id}.md`), 'utf-8');

    const contents = fm(file).attributes;

    return {
      id,
      ...contents,
    }
  });

  return {
    props: {
      blogList,
    },
  };
};

export default Home
